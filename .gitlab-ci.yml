stages:
- format
- build
- test

format:linux:
  stage: format
  before_script:
    - apt update
    - apt -y install qt5-default g++ build-essential doxygen cppcheck clang-format
  script:
    - git checkout -b `echo \`git branch --points-at $CI_BUILD_TAG --format=\"%\(refname:short\)\" | head -n 1\`-format`
    - find . -regex '.*\.\(cc\|h\)' -exec clang-format -style=file -i {} \;
    - git diff --exit-code || (git commit -m="Auto formating" && git push origin HEAD)
    - cppcheck --error-exitcode=1 . > /dev/null

build:linux:
  stage: build
  script:
    - mkdir build
    - cd build
    - qmake ..
    - make -j4
    - cd ..
    - doxygen Doxyfile
  artifacts:
    paths:
      - build/

  tags:
    - qt
    - c++

test:linux:
  stage: test
  script:
    - mkdir build
    - cd build
    - qmake ..
    - make -j4
    - export LD_LIBRARY_PATH=../PiCommunicator
    - make check
  tags:
    - test
    - qt
    - c++
